# Generated by Django 3.1.14 on 2022-04-27 21:38

import account.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_type', models.CharField(choices=[('freelancer', 'Freelancer'), ('client', 'Client')], max_length=30, verbose_name='User Type')),
                ('is_subscribe', models.BooleanField(default=True, help_text='Designate whether the user is subscribed for email notification.', verbose_name='Is subscribed')),
                ('active_login', models.BooleanField(default=False, help_text='Check whether the user is currently logged in or not.', verbose_name='Is login')),
                ('authentication_required', models.BooleanField(default=False, help_text='Check whether the user need login authentication.', verbose_name='Is login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            managers=[
                ('objects', account.models.CustomUserManager()),
            ],
        ),
    ]
